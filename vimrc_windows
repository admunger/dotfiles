set langmenu=en_US

"source $VIMRUNTIME/vimrc_example.vim
"source $VIMRUNTIME/mswin.vim
"behave mswin

"Minimal shared configuration
set nocompatible
set swapfile
colorscheme industry
set number
set relativenumber
syntax on
set tabstop=4
set shiftwidth=4
set wildmenu
set splitright

" statusline setting
set laststatus=2
set statusline=   " clear the statusline for when vimrc is reloaded
set statusline+=%-3.3n\                      " buffer number
set statusline+=%f\                          " file name
set statusline+=%h%m%r%w                     " flags
set statusline+=[%{strlen(&ft)?&ft:'none'},  " filetype
set statusline+=\ %{strlen(&fenc)?&fenc:&enc}, " encoding
set statusline+=\ %{&fileformat}]              " file format
set statusline+=%=                           " right align
set statusline+=%{synIDattr(synID(line('.'),col('.'),1),'name')}\  " highlight
"set statusline+=%b,0x%-8B\                   " current char
set statusline+=%-14.(%l,%c%V%)\ %<%P        " offset

"Options for search features
set hlsearch
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
set incsearch
set ignorecase
set smartcase

"------- Windows-specific configurations -------
"Set the copy/paste behaviour
vmap C "+y
imap <C-V> <C-O>"+p
set clipboard=unnamed
set whichwrap+=<,>,[,]
set backspace=indent,eol,start

"specify initial dimensions of the window
set lines=34 columns=80

if has("gui_running")
  if has("gui_win32")
    set guioptions-=T  "remove toolbar
	set guioptions-=L  "no vertical-hand scrollbar in split
	":set guifont=* to manually set font
    "set guifont=Consolas:h11:cANSI
	set guifont=Monospac821_BT:h10:cANSI
	colorscheme monokai-phoenix

	"set initial window position
	winpos 0 0
	winsize 80 40
  endif
endif

"vimdiff configuration (initial config)
set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

